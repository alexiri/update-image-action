name: 'Update Check'
description: 'See if an image (dnf-based only) needs to be rebuilt or not'

inputs:
  imageref:
    description: 'Image to check for updates'
    required: true
  baseref:
    description: 'Base image to check for updates'
    required: false

outputs:
  rebuild-needed:
    description: "If the image needs to be rebuilt"
    value: ${{ steps.results.outputs.rebuild-needed }}


# 'dnf check-update'
# exit codes:
#   0 - no updates
#   100 - updates available
#   125 - image not found
#   127 - dnf command not found
runs:
  using: "composite"
  steps:
    - name: Check for Updates
      id: check_update
      shell: bash
      run: |
        res=0
        podman run --pull always --quiet --rm ${{ inputs.imageref }} dnf check-update || res=$?
        echo "res=${res}" >> "$GITHUB_OUTPUT"
        echo "Exit code: '$res'"

        BASE_IMAGE=$(podman image inspect --format '{{index .Annotations "org.opencontainers.image.base.name"}}' ${{ inputs.imageref }})
        echo "base_image=${BASE_IMAGE}" >> "$GITHUB_OUTPUT"

    - name: Check base for Updates
      id: check_base
      if: ${{ steps.check_update.outputs.res == '100' }}
      shell: bash
      run: |
        # Use baseref if provided, otherwise use the base image from the image. if we don't have that either, return 0
        if [ -z "${{ inputs.baseref }}" ]; then
          if [ -z "${{ steps.check_update.outputs.base_image }}" ]; then
            echo "No base image provided, skipping check"
            echo "res=0" >> "$GITHUB_OUTPUT"
            exit 0
          else
            echo "Using base image from the image: ${{ steps.check_update.outputs.base_image }}"
            export BASE_IMAGE=${{ steps.check_update.outputs.base_image }}
          fi
        else
          export BASE_IMAGE=${{ inputs.baseref }}
        fi
        res=0
        podman run --pull always --quiet --rm ${BASE_IMAGE} dnf check-update || res=$?
        echo "res=${res}" >> "$GITHUB_OUTPUT"
        echo "Exit code: '$res'"

    - name: Results
      id: results
      shell: bash
      run: |
        if [ "${{ steps.check_update.outputs.res }}" = "0" ]; then
          echo "Image does not need rebuild"
          echo "rebuild-needed=false" >> "$GITHUB_OUTPUT"
        elif [ "${{ steps.check_update.outputs.res }}" = "125" ]; then
          echo "Image not found, build it"
          echo "rebuild-needed=true" >> "$GITHUB_OUTPUT"
        elif [ "${{ steps.check_update.outputs.res }}" = "100" ]; then
          if [ "${{ steps.check_base.outputs.res }}" = "0" ]; then
            echo "Updates available for ${{ inputs.imageref }} and base image is up to date"
            echo "rebuild-needed=true" >> "$GITHUB_OUTPUT"
          else
            echo "Updates available for ${{ inputs.imageref }}, but base image needs to be rebuilt first"
            echo "rebuild-needed=false" >> "$GITHUB_OUTPUT"
          fi
        else
          echo "rebuild-needed=false" >> "$GITHUB_OUTPUT"
        fi
